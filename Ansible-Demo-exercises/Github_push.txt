Open Git Bash on the PC
go to the directory or folder from where the file you want to upload to repo
for example - cd Ansible-Demo-exercises/

git config user.name
git config email.name ''

git config --global user.name 'franklinpashok'
git config --global user.email 'franklinpashok@gmail.com'

git init --initial-branch='stockmarket'

# to add all files to the git to push to repo
git add .

#Will show which files are to be added
git status

# use this to add a comment
git commit -m 'first commit'

#get the url from the github from the repo where you want to upload
git remote add origin 'https://github.com/franklinpashok/Ansible_journey.git'

# use git push to push the file
git push -u origin master(or whatever is the initial branch)

==== first computer from where you push the files will use the master if you use the above commands, you can still change the name and create a new branch to be more specific
 
# to create a new branch from a different computer 

git checkout -b <branch name> ====== this will create a branch on the local computer, the files in this new computer will use the new branch === Use the below command to push the file to the repo on git hub remote branch with the same name

git push -u origin <branchname>

# to switch to another branch

git checkout <branch name>

git switch <branch name>

# to delete a local branch

git branch --delete <local branch name> = do not delete the local branch if remote branch is created usign this local branch

# to delete a remote branch

git fetch purne

git push origin --delete --remote <branch name>

NOTE: if you are using same path for two branches (first computer) where master and a new branch using the same path and directory. you switch to one branch and make changes to files, those changes wont take effect in another branch. so if you switch branchs you wont see the changes to the files. even its the same file you need to edit.

also if you make changes to the files which connected to one branch and try to switch to another branch it wont allow you to switch untill you commit changes in the current branch

# command to clone from a single branch

git clone https://github.com/franklinpashok/Ansible_journey.git --branch homelaptoprepo --single-branch

# command to fetch a remote branch from the repo and create a local branch with the remote branch files

git fetch origin <remote repo name>:<localreportname> : better to keep the same name for both local and remote to avoid confusion

NOTE: if you are using same path for two branches (first computer) where master and a new branch using the same path and directory. you switch to one branch and make changes to files, those changes wont take effect in another branch. so if you switch branchs you wont see the changes to the files. even its the same file you need to edit.

also if you make changes to the files which connected to one branch and try to switch to another branch it wont allow you to switch untill you commit changes in the current branch

# command to clone from a single branch

git clone https://github.com/franklinpashok/Ansible_journey.git --branch homelaptoprepo --single-branch

# command to fetch a remote branch from the repo and create a local branch with the remote branch files

git fetch origin <remote repo name>:<localreportname> : better to keep the same name for both local and remote to avoid confusion


# if you want to use ssh to upload files to repor instead of https. 

GEN SSH KEY

1) ssh-keygen -t rsa -b 4096 -c "franklinpashok@gmail.com" / ssh-keygen -t ed25519 -C "franklinpashok@gmail.com" (Use default folder)
2) eval "$(ssh-agent -s)" (to start the ssh)
3) ssh-add ~/.ssh/id_ed25519 (to add the private key)
4) copy the public key *.pub file and create a new ssh key on github
5) use a different branch name if you want to pull the remote report from the git repor

	git fetch origin ELK_learning_homePC:ELK_OfficePC - if ELK_OfficePC branch already exists it wont allow to fetch.
6) 



use the default directory and give a passpharse
add the .pub file content to your git hub account ssh keys. Then change setURL to ssh from the git repo instead of https

if the online repo is ahead of not same as the localrepo 

git merge origin <brnach name>

git pull origin <branch name>

The remote branch is automatically created when you push it to the remote server. So when you feel ready for it, you can do:

git push <remote-name> <branch-name> 
Where <remote-name> is typically origin, the name which git gives to the remote you cloned from. Your colleagues would then just pull that branch, and it's automatically created locally.

Note however that formally, the format is:

git push <remote-name> <local-branch-name>:<remote-branch-name>
But when you omit one, it assumes both branch names are the same. Having said this, as a word of caution, do not make the critical mistake of specifying only :<remote-branch-name> (with the colon), or the remote branch will be deleted!
